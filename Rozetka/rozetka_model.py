from selenium.webdriver.common.by import Byfrom Classes.store import BaseStorefrom selenium import webdriverfrom utillities import get_article_from_title, clean_priceclass RozetkaStore(BaseStore):    def __init__(self):        super().__init__(            shop_url='https://rozetka.com.ua/search/?producer=wacom&redirected=1&seller=rozetka&text=wacom')        self.driver = webdriver.Chrome()        self.item_list = []        self.get = self.driver.get(            'https://rozetka.com.ua/search/?producer=wacom&redirected=1&seller=rozetka&text=wacom')        self.items = self.driver.find_elements(By.CSS_SELECTOR, 'li.catalog-grid__cell')    def generate_info(self):        for item in self.items:            try:                title = item.find_element(By.CSS_SELECTOR, 'a.product-link.goods-tile__heading').text                article = get_article_from_title(title.strip('(Офіційна гарантія 24 міс.)'))                price_new_elements = item.find_elements(By.CSS_SELECTOR, 'span.goods-tile__price-value')                price_old_elements = item.find_elements(By.CSS_SELECTOR, 'div.goods-tile__price--old')                status_elements = item.find_elements(By.CSS_SELECTOR, 'div.goods-tile__availability')                available = True                if status_elements:                    availability_text = status_elements[0].text.strip()                    if 'Немає в наявності' in availability_text:                        available = False                        continue                price = 'N/A'                if price_new_elements:                    price = price_new_elements[0].text.strip()                elif price_old_elements:                    price = price_old_elements[0].text.strip()                card_item = {                    'name': title.replace("Офіційна гарантія 24 міс.", ""),                    'price': clean_price(price) if price != 'N/A' else price,                    'article': article,                    'available': available                }                self.item_list.append(card_item)                            except Exception as e:                    print(f'Ошибка при обработке элемента')                    print(f'Элемент HTML: {item.get_attribute("outerHTML")}')        return self.item_list