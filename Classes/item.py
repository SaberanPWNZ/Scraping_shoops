from sqlalchemy.orm import Mappedfrom sqlalchemy.orm import mapped_columnfrom sqlalchemy.orm import relationshipfrom sqlalchemy.orm import DeclarativeBaseBase = DeclarativeBase()class Item(Base):    __tablename__ = 'Item'    id: mapped_column(primary_key=True)    self.article = article        self.title = title        self.price = price    def __repr__(self):        return f'({self.article}, {self.title}, {self.price})'    @classmethod    def from_tuple(cls, data):        article, title, price = data        return cls(article=article, title=title, price=price)    def strip_price(self, price: str):        return price.strip().replace(' ', '').replace(',00', '')    @classmethod    def get_article_from_title(cls, title: str):        article = title.split('(')        article = article[1].replace(')', "")        return article