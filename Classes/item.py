from sqlalchemy import String, Integerfrom sqlalchemy.orm import Mappedfrom sqlalchemy.orm import mapped_columnfrom sqlalchemy.orm import DeclarativeBasefrom sqlalchemy import MetaDatametadata_obj = MetaData()class Base(DeclarativeBase):    metadata = metadata_objclass Item(Base):    __tablename__ = 'Item'    id: Mapped[int] = mapped_column(primary_key=True)    title: Mapped[str] = mapped_column(String(100))    article: Mapped[str] = mapped_column((String(30)))    price: Mapped[int] = mapped_column(Integer())    def __repr__(self) -> str:        return f"Item(id={self.id}, title={self.title}, article={self.article!r}, price={self.price})"    @classmethod    def from_tuple(cls, data):        article, title, price = data        return cls(article=article, title=title, price=price)    def strip_price(self, price: str):        return price.strip().replace(' ', '').replace(',00', '')    @classmethod    def get_article_from_title(cls, title: str):        article = title.split('(')        article = article[1].replace(')', "")        return article