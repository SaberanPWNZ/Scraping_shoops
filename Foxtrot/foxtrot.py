import jsonimport _sqlite3from Scraping_shoops.Classes.store import Soupfrom Scraping_shoops.Foxtrot.shop_model import FoxtrotStorefrom Scraping_shoops.utillities import get_article_from_titlefrom databases.parse_db import get_info_from_dbfoxtrot = FoxtrotStore()response = foxtrot.get()soup = Soup(response)all_items = soup.find_element(class_='listing__body-wrap image-switch')item_list = []def generate_info():    for item in all_items.find_all('article'):        price = item.find_next('div', class_="card-price")        name = item.find_next(class_='card__title')        if price is not None:            price = price.text.strip().replace(" ", "").replace("₴", "")        if name is not None:            name = name.get('title')        card_item = {            'name': name,            'price': price,            'article': get_article_from_title(name)        }        item_list.append(card_item)    return item_listdef compare_data(partner_list):    # Retrieve all items from the database and store them in a dictionary for efficient lookup    items_from_db = list(get_info_from_db())    items_dict = {item.article: item for item in items_from_db}    missing_items = []    for elem in partner_list:        article = elem['article']        price_partner = int(elem['price'])        # Check if the article exists in the items retrieved from the database        if article in items_dict:            item = items_dict[article]            item_price = int(item.price.decode('utf-8')) if isinstance(item.price, bytes) else int(item.price)            if price_partner == item_price:                print(f'{article} - {price_partner} грн - OK')            else:                print(f'{article}, partner price = {price_partner} грн, RRP price = {item_price} грн')        else:            missing_items.append(article)            print(f'Article {article} not found in the database')    return missing_itemsgenerate_info()compare_data(item_list)