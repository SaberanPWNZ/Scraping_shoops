from Foxtrot.foxtrot import compare_datafrom Scraping_shoops.Classes.store import BaseStore, Soupfrom utillities import HEADERSclass MoyoStore(BaseStore):    def __init__(self):        self.soup = Soup(MoyoStore.get(self, shop_url='https://www.moyo.ua/ua/acsessor/acsessor_for_comp/manipulators'                                                      '/wacom/?page=1'))        super().__init__(            shop_url='https://www.moyo.ua/ua/acsessor/acsessor_for_comp/manipulators/wacom/?page=1',            all_items=self.soup.find_element(class_='catalog_content')        )    def generate_info_from_moyo(self, all_items):        for item in all_items:            print(item)        #     price = item.find_next('div', class_="card-price")        #     name = item.find_next(class_='card__title')        #        #     if price is not None:        #         price = price.text.strip().replace(" ", "").replace("â‚´", "")        #        #     if name is not None:        #         name = name.get('title')        #        #     card_item = {        #         'name': name,        #         'price': price,        #         'article': name        #     }        #     self.item_list.append(card_item)        return self.item_listmoyo = MoyoStore()items = moyo.generate_info_from_moyo(all_items=moyo.all_items)print(items)compare_data(items)# from bs4 import BeautifulSoup# import requests### response = requests.get(url='https://www.moyo.ua/ua/acsessor/acsessor_for_comp/manipulators/wacom/?page=1', headers=HEADERS)## soup = BeautifulSoup(response.text, 'lxml')## all = soup.find(class_='catalog_content').find(class_='catalog_products js-products-list')# for i in all.find_all('div', class_='product-card goods-item add-data ga-item'):#     print(i.)