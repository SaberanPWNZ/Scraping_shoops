version: '3.8'

services:
  django:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    container_name: django-container
    env_file:
      - .env
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    networks:
      - scraping_network
    depends_on:
      - db
      - redis
    command: sh ./entrypoint.sh

  redis:
    image: redis:6.2-alpine
    container_name: redis_container
    restart: always
    ports:
      - "6379:6379"
    networks:
      - scraping_network

  db:
    container_name: db
    image: postgres:17.0-alpine
    volumes:
      - data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5432:5432"
    networks:
      - scraping_network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_container
    restart: always
    command: celery -A scraper.celery_config worker --loglevel=info
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - django
    volumes:
      - .:/app
    networks:
      - scraping_network

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_beat_container
    restart: always
    command: celery -A scraper.celery_config beat --loglevel=info
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - django
    volumes:
      - .:/app
    networks:
      - scraping_network

volumes:
  data:

networks:
  scraping_network:
    driver: bridge
