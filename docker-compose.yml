version: '3.8'

services:
  django:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    container_name: django-container
    env_file:
      - .env
    volumes:
      - .:/app
      - ./media:/app/media
    expose:
      - "8000"
    networks:
      - scraping_network
    depends_on:
      - redis
    command: sh ./entrypoint.sh

  redis:
    image: redis:6.2-alpine
    container_name: redis_container
    restart: always
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - scraping_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_container
    restart: always
    command: celery -A scraper.celery_config worker --loglevel=info
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      django:
        condition: service_started
    volumes:
      - .:/app
    networks:
      - scraping_network

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_beat_container
    restart: always
    command: celery -A scraper.celery_config beat --loglevel=info
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      django:
        condition: service_started
    volumes:
      - .:/app
    networks:
      - scraping_network

  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bot_container
    restart: always
    command: python telegram_bot/bot.py
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    networks:
      - scraping_network

  nginx:
    image: nginx:alpine
    container_name: nginx-container
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      django:
        condition: service_healthy
    networks:
      - scraping_network

volumes:
  redis_data:
  media_data:

networks:
  scraping_network:
    driver: bridge