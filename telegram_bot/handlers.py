import timefrom aiogram import types, Routerfrom aiogram.enums import ParseModefrom Auchan.auchan import start_auchanfrom Click.click import start_clickfrom Foxtrot.foxtrot import start_foxtrotfrom KTC.ktc import start_ktcfrom Moyo.moyo import start_moyofrom Rozetka.rozetka import start_rozetkauser_router = Router()@user_router.message(lambda message: message.text == "🦊Foxtrot🦊")async def foxtrot_handler(message: types.Message):    await message.answer("⏳ готую звіт...")    results = start_foxtrot()    result_str = '\n'.join([str(item) for item in results])    await message.answer(f"🛒Foxtrot:\n\n{result_str}")@user_router.message(lambda message: message.text == "Moyo")async def moyo_handler(message: types.Message):    await message.answer("⏳ готую звіт...")    results = start_moyo()    result_str = '\n'.join([str(item) for item in results])    await message.answer(f"🛒 Moyo:\n\n{result_str}")@user_router.message(lambda message: message.text == "KTC")async def ktc_handler(message: types.Message):    await message.answer("⏳ готую звіт...")    results = start_ktc()    result_str = '\n'.join([str(item) for item in results])    await message.answer(f"🛒 KTC:\n\n{result_str}")@user_router.message(lambda message: message.text == "Click")async def click_handler(message: types.Message):    await message.answer("⏳ готую звіт...")    results = start_click()    result_str = '\n'.join([str(item) for item in results])    await message.answer(f"🛒 Click:\n\n{result_str}")@user_router.message(lambda message: message.text == "Rozetka")async def rozetka_handler(message: types.Message):    await message.answer("⏳ готую звіт... 5-10 секунд")    results = start_rozetka()    result_str = '\n'.join([str(item) for item in results])    await message.answer(f"🛒 Rozetka:\n\n{result_str}", parse_mode=ParseMode.HTML)@user_router.message(lambda message: message.text == "Auchan")async def auchan_handler(message: types.Message):    await message.answer("⏳ готую звіт... ")    results = start_auchan()    result_str = '\n'.join([str(item) for item in results])    await message.answer(f"🛒 Auchan:\n\n{result_str}", parse_mode=ParseMode.HTML)@user_router.message(lambda message: message.text == "WO")async def wo_handler(message: types.Message):    await message.reply(text='В розробці..... ')    await message.answer_animation(animation='CAACAgIAAxkBAAEMRUxmZG5cd61Tb_lxQOZwM308fw6SqAACSxYAArVkIEitLhBSiib0gTUE')    # await message.answer("⏳ готую звіт...")    # result_str = '\n'.join([str(item) for item in results])    # await message.answer(f"🛒 Rozetka:\n\n{result_str}", parse_mode=ParseMode.HTML)