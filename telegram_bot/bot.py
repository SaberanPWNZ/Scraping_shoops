import asyncioimport loggingimport timefrom config import BOT_TOKENfrom aiogram import Bot, Dispatcher, types, Ffrom aiogram.filters import Filterfrom aiogram.filters import Commandfrom Foxtrot.foxtrot import start_foxtrotfrom KTC.ktc import start_ktcfrom Moyo.moyo import start_moyofrom main import start_shops_checkingbot = Bot(token=BOT_TOKEN)dp = Dispatcher(bot=bot)# dp.include_router(handlers.user_router)logging.basicConfig(level=logging.INFO)@dp.message(Command(commands=['start']))async def start(message: types.Message):    await message.reply(f'Привіт, {message.from_user.username}')    await message.answer('Да даний момент я можу перевіриті ціни на Wacom!')    await message.answer(f'введи "/" та назву магазину зі списку')    await message.answer('foxtrot, ktc, moyo')@dp.message(Command(commands=["foxtrot"]))async def check_foxtrot(message: types.Message):    await message.reply('Перевіряю цині на Foxtrot.ua')    results = start_foxtrot() or []    result_str = '\n'.join([str(item) for item in results])    await message.answer(result_str.strip())@dp.message(Command(commands=["moyo"]))async def check_moyo(message: types.Message):    await message.reply('Перевіряю цині на Moyo.ua')    results = start_moyo() or []    result_str = '\n'.join([str(item) for item in results])    await message.answer(result_str.strip())@dp.message(Command(commands=["ktc"]))async def check_ktc(message: types.Message):    await message.reply('Перевіряю ціни на KTC.ua')    results = start_ktc() or []    result_str = "Results from KTC:\n"    result_str += '\n'.join([str(item) for item in results])    await message.answer(result_str.strip())@dp.message()async def all_messages(message: types.Message):    await message.reply('я не знаю як на це реагувати')async def main():    await dp.start_polling(bot, skip_updates=True)if __name__ == '__main__':    asyncio.run(main())