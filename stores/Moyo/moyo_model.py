import requestsfrom bs4 import BeautifulSoupfrom Classes.status import Statusfrom Classes.store import BaseStorefrom stores.Itbox.itbox_info import ITBOX_HEADERSfrom utillities import clean_price, get_article_from_titleclass MoyoStore(BaseStore):    def __init__(self, urls):        super().__init__(            shop_url='https://www.moyo.ua/ua/acsessor/acsessor_for_comp/manipulators/wacom/?page=1')        self.urls = urls        self.all_items = []        self.item_list = []        for url in self.urls:            response = requests.get(url, headers=ITBOX_HEADERS)            soup = BeautifulSoup(response.text, 'lxml')            items = soup.find(class_='catalog_content').find(class_='catalog_products js-products-list')            self.all_items.append(items)    def generate_info_from_moyo(self):        for items in self.all_items:            if items:                for item in items.find_all('div', class_='product-card goods-item add-data ga-item'):                    name = item.find('span', class_='product-card_title_tooltip').text                    price = (item.find('div', class_='product-card_price_current').text.strip().replace(" ", "")                             .replace("â‚´", ""))                    status_elem = item.find(class_='buy-btn btn btn--green js-product-modal-close js-buy')                    status = Status.in_stock if status_elem else Status.not_in_stock                    card_item = {                        'name': name,                        'price': clean_price(price),                        'article': get_article_from_title(name).strip(),                        'status': status                    }                    self.item_list.append(card_item)        return self.item_list