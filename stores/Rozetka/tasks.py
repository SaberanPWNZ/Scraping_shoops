import loggingimport osimport djangoos.environ.setdefault("DJANGO_SETTINGS_MODULE", "scraper.settings")django.setup()from scraper.celery_config import appfrom stores.Rozetka.info import ROZETKA_ARTICLES_WACOM, ROZETKA_ARTICLES_XP_PENfrom stores.Rozetka.rozetka_model import RozetkaStorewacom = 'https://rozetka.com.ua/ua/search/?producer=wacom&redirected=1&seller=rozetka_only&text=wacom'xp_pen = 'https://rozetka.com.ua/ua/search/?producer=xp-pen&redirected=1&section_id=83199&seller=rozetka&text=xp+pen'logger = logging.getLogger('scraper')@app.task()def start_rozetka_wacom():    try:        rozetka = RozetkaStore()        items = (rozetka.generate_info(url=wacom, articles_dict=ROZETKA_ARTICLES_WACOM))        if not items:            logger.info(f"Не вдалось спарсити данні ROZETKA/WACOM - {len(items)} товарів")            rozetka.send_allert_notification()        logger.info(f"Збережено/Оновлено {len(items)} товарів для партнера ROZETKA (бренд WACOM).")        rozetka.save_parsed_data(partner_name='Rozetka', items=items, brand="WACOM")    except Exception as e:        logger.info(f"Помилка парсингу данних ROZETKA/WACOM {e}")@app.task()def start_rozetka_xp_pen():    try:        rozetka = RozetkaStore()        items = (rozetka.generate_info(url=xp_pen, articles_dict=ROZETKA_ARTICLES_XP_PEN))        if not items:            logger.info(f"Не вдалось спарсити данні ROZETKA/XP-Pen - {len(items)} товарів")            rozetka.send_allert_notification()            logger.info(f"Збережено/Оновлено {len(items)} товарів для партнера ROZETKA (бренд XP-Pen).")            rozetka.save_parsed_data(partner_name='Rozetka', items=items, brand="XP-Pen")    except Exception as e:        logger.info(f"Помилка парсингу данних ROZETKA/XP-Pen {e}")