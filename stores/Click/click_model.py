import requestsfrom bs4 import BeautifulSoupfrom Classes.status import Statusfrom Classes.store import BaseStorefrom items.models import Itemfrom stores.Click.click_info import CLICK_ARTICLESfrom utillities import get_article_from_titleclass ClickStore(BaseStore):    def __init__(self, url):        super().__init__(            shop_url='https://click.ua/shop/search?q=wacom')        self.item_list = []        self.bs = requests.get(url=url)        self.soup = BeautifulSoup(self.bs.text, 'lxml')        self.all_items = self.soup.find(class_='catalog__row')    def generate_info(self):        try:            for item in self.all_items.find_all(class_='product'):                price = item.find_next(class_="product__price").find('b', class_='b')                name = item.find_next(class_='product__title')                status_elem = item.find_next(class_='fs12 color --green')                if price is not None:                    price = price.text.strip().split('â‚´')[0].strip().replace(' ', '')                if name is not None:                    name = name.text.strip()                if status_elem:                    status = Status.in_stock                else:                    status = Status.not_in_stock                card_item = {                    'name': name,                    'price': price,                    'article': CLICK_ARTICLES.get(name),                    'status': status                }                self.item_list.append(card_item)        except Exception as ex:            return f'{ex}'        return self.item_list