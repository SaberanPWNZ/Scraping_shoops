import loggingfrom scraper.celery_config import appfrom stores.Foxtrot.foxtrot_info import WACOM_URL, XP_PEN_URL, FOXTROT_ARTICLES_WACOM, FOXTROT_ARTICLESfrom stores.Foxtrot.shop_model import FoxtrotStorelogger = logging.getLogger('scraping')@app.task()def start_foxtrot_wacom():    try:        foxtrot = FoxtrotStore(url=WACOM_URL)        items = foxtrot.generate_info(articles_dict=FOXTROT_ARTICLES_WACOM)        if not items:            foxtrot.send_allert_notification()            logger.info(f"Не вдалось спарсити данні Foxtrot/WACOM - {len(items)} товарів")        foxtrot.save_parsed_data(partner_name="Foxtrot", items=items,  brand="WACOM")    except Exception as e:        logger.info(f"Помилка парсингу данних Foxtrot/WACOM {e}")@app.task()def start_foxtrot_xp_pen():    try:        foxtrot = FoxtrotStore(url=XP_PEN_URL)        items = foxtrot.generate_info(articles_dict=FOXTROT_ARTICLES)        if not items:            foxtrot.send_allert_notification()            logger.info(f"Не вдалось спарсити данні Foxtrot/XP-Pen - {len(items)} товарів")        foxtrot.save_parsed_data(partner_name="Foxtrot", items=items,  brand="XP-Pen")    except Exception as e:        logger.info(f"Помилка парсингу данних Foxtrot/XP-pen {e}")