import requestsfrom bs4 import BeautifulSoupfrom Classes.status import Statusfrom Classes.store import BaseStorefrom stores.WacomStore.wacomsotre_info import headersfrom utillities import clean_priceclass WacomStore(BaseStore):    def __init__(self):        super().__init__(shop_url='https://wacomstore.com.ua/')        self.items = []    def get_soup(self, link):        response = requests.get(link, headers=headers)        response.raise_for_status()        return BeautifulSoup(response.text, 'lxml')    def generate_info_with_many_links(self, links: list):        for link in links:            soup = self.get_soup(link)            product_items = soup.find_all(                class_="product-category-list products products-grid "                       "small-block-grid-2 medium-block-grid-3 large-block-grid-4 "                       "xlarge-block-grid-4 xxlarge-block-grid-4 columns-4 product-layout-grid"            )            for item in product_items:                try:                    name_elem = item.find(class_="product-title-link")                    price_elem = item.find(class_="woocommerce-Price-amount amount")                    article_elem = item.find(class_="cart_product__sku")                    price = price_elem.text.strip().split('₴')[0].strip().replace(' ', '') if price_elem else "0"                    article = article_elem.text.strip() if article_elem else "None"                    card_item = {                        "name": name_elem.text.strip() if name_elem else "N/A",                        "price": price.split(',')[0] ,                        "article": article,                        "status": Status.in_stock                    }                    self.items.append(card_item)                except Exception as ex:                    print(f"Ошибка при обработке {link}: {ex}")        return self.items