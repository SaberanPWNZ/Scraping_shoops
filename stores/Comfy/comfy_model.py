from playwright.sync_api import sync_playwrightfrom Classes.status import Statusfrom Classes.store import BaseStorefrom utillities import get_article_from_title, clean_priceclass ComfyStore(BaseStore):    def __init__(self):        super().__init__(            shop_url='https://comfy.ua/ua/search/?q=wacom'        )        self.item_list = []    def generate_info(self, url):        with sync_playwright() as p:            browser = p.chromium.launch(headless=False)            page = browser.new_page()            try:                print("Ожидание загрузки страницы...")                page.goto(url)                page.wait_for_selector('.products-catalog-grid')  # Убедитесь, что страница загружена полностью                print("Страница загружена, ищем элементы...")                all_items = page.query_selector_all(                    '.products-catalog-grid.products-catalog--wide-grid-mode .prdl-item.products-catalog-grid__item.prdl-item--wide-grid')                if not all_items:                    print("Не найдено ни одного товара.")                for item in all_items:                    try:                        title_elem = item.query_selector('.products-list-item__info a')                        price_elem = item.query_selector('.products-list-item-price__actions-price-current')                        title = title_elem.get_attribute('title') if title_elem else ''                        price = price_elem.text_content() if price_elem else ''                        article = get_article_from_title(title)                        status_elem = item.query_selector('.buy-small-btn__icon.icon-comfy')                        if status_elem:                            status = Status.in_stock                        else:                            status = Status.not_in_stock                        if title and price:                            title = title.strip()                            price = price.strip()                        if "Мікропошкодження" in title:                            continue                        card_item = {                            'name': title,                            'price': clean_price(price),                            'article': article,                            'status': status                        }                        self.item_list.append(card_item)                    except Exception as e:                        print(f'Ошибка обработки элемента: {e}')            except Exception as e:                print(f'Ошибка загрузки страницы: {e}')            finally:                browser.close()        return self.item_list