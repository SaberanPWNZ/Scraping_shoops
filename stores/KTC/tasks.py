import osimport djangofrom redis_client.redis_client import redis_clientfrom scraper.celery_config import appfrom stores.KTC.ktc_info import KTC_ARTICLESfrom stores.KTC.ktc_model import KtcStorefrom stores.KTC.locators import KtcLocatorfrom utillities import custom_article_extractoros.environ.setdefault("DJANGO_SETTINGS_MODULE", "scraper.settings")django.setup()from items.models import Item@app.task(name='stores.KTC.tasks.start_ktc_wacom')def start_ktc_wacom():    ktc = KtcStore(url=KtcLocator.WACOM_PAGE_URL)    ktc.load_items(container_locator=KtcLocator.CATALOG_GOODS, item_locator=KtcLocator.ITEM_LOOP)    items = ktc.generate_info_with_articles(        title_locator=KtcLocator.ITEM_TITLE,        price_locator=KtcLocator.ITEM_PRICE,        status_locator=KtcLocator.ITEM_STATUS,        article_extractor=lambda name: custom_article_extractor(name, KTC_ARTICLES))    return items@app.task(name='stores.KTC.tasks.start_ktc_xp_pen')def start_ktc_xp_pen():    ktc = KtcStore(url=KtcLocator.XP_PEN_PAGE_URL)    ktc.load_items(container_locator=KtcLocator.CATALOG_GOODS, item_locator=KtcLocator.ITEM_LOOP)    items = ktc.generate_info_with_articles(        title_locator=KtcLocator.ITEM_TITLE,        price_locator=KtcLocator.ITEM_PRICE,        status_locator=KtcLocator.ITEM_STATUS,        article_extractor=lambda name: custom_article_extractor(name, KTC_ARTICLES))    return itemsprint(start_ktc_wacom())