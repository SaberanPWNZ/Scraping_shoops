import osimport djangofrom redis_client.redis_client import redis_clientfrom stores.KTC.ktc_info import KTC_ARTICLESfrom stores.KTC.ktc_model import KtcStorefrom stores.KTC.locators import KtcLocatoros.environ.setdefault("DJANGO_SETTINGS_MODULE", "scraper.settings")django.setup()from items.models import Itemfrom tasks.client import celery_app@celery_app.taskdef start_ktc_wacom():    ktc = KtcStore(url=KtcLocator.WACOM_PAGE_URL)    ktc.load_items(container_locator=KtcLocator.CATALOG_GOODS, item_locator=KtcLocator.ITEM_LOOP)    items = ktc.generate_info(        price_locator=KtcLocator.ITEM_PRICE,        status_locator=KtcLocator.ITEM_STATUS,        title_locator=KtcLocator.ITEM_TITLE    )    result = ktc.compare_data(items)    json_data = redis_client.transfer_to_json(result)    redis_client.save_data_in_redis(name='ktc_wacom', value=json_data)    return result@celery_app.taskdef start_ktc_xp_pen():    ktc = KtcStore(url=KtcLocator.XP_PEN_PAGE_URL)    ktc.load_items(container_locator=KtcLocator.CATALOG_GOODS, item_locator=KtcLocator.ITEM_LOOP)    items = ktc.generate_info_xp_pen()    result = ktc.compare_data_xp_pen(partner_items_list=items,                                     article_dict=KTC_ARTICLES,                                     model=Item)    json_data = redis_client.transfer_to_json(result)    redis_client.save_data_in_redis(name='ktc_xp', value=json_data)    return result