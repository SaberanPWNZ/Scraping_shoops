import requestsfrom bs4 import BeautifulSoupfrom Classes.status import Statusfrom Classes.store import BaseStorefrom items.models import Itemfrom utillities import clean_price, get_article_from_titleclass BrainStore(BaseStore):    def __init__(self, urls):        super().__init__(            shop_url='url')        self.urls = urls        self.all_items = []        self.item_list = []        for url in self.urls:            soup = self.get_soup(url)            items = soup.find(class_='view-grid tab-pane row br-row br-flex active')            self.all_items.append(items)    def get_soup(self, url):        response = requests.get(url)        response.raise_for_status()        return BeautifulSoup(response.text, 'lxml')    def generate_info_wacom(self, article_from_name_dict):        for items in self.all_items:            if items:                for item in items.find_all(                        class_='col-lg-3 col-md-4 col-sm-6 col-xs-6 product-wrapper br-pcg-product-wrapper'):                    name = item['data-name']                    price = item['data-price']                    status = item.find_next(class_='br-bb-buy')                    if status:                        status = status.text.strip()                        if 'Купити' in status:                            status = Status.in_stock                    article = article_from_name_dict.get(name)                    card_item = {                        'name': name.strip(),                        'price': clean_price(price),                        'article': article,                        'status': status                    }                    self.item_list.append(card_item)        return self.item_list