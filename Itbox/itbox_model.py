import requestsfrom bs4 import BeautifulSoupfrom Classes.store import BaseStore, Soupfrom config import ITBOX_HEADERSfrom utillities import get_article_from_title, HEADERSclass ItboxStore(BaseStore):    def __init__(self, ):        super().__init__(            shop_url='https://www.itbox.ua/ua/search/?Search=wacom'        )        self.soup = self.get_soup()        self.all_items = self.soup.find('div', class_='products')    def get_soup(self):        response = requests.get('https://www.itbox.ua/ua/search/?Search=wacom',                                headers=ITBOX_HEADERS)        response.raise_for_status()        return BeautifulSoup(response.text, 'lxml')    def generate_info(self):        for item in self.all_items.find_all(class_='stuff left'):            price = item.find_next(class_="stuff-price__digits")            name = item.find_next('div', class_='stuff-desc').find('a', class_='to_product')            article = get_article_from_title(name)            print(price, name, article)            if price is not None:                price = price.text.strip().split('â‚´')[0].strip().replace(' ', '')            if name is not None:                name = name.text.strip()            card_item = {                'name': name,                'price': price,                'article': get_article_from_title(name)            }            self.item_list.append(card_item)        return self.item_list# response = requests.get(#     url="https://www.itbox.ua/ua/search/?Search=wacom",#     headers=HEADERS# )## soup = BeautifulSoup(response.text, 'lxml')# print(response.text)# all_items = soup.find('div', class_='products')# # print(all_items)## item_list = []## for item in all_items.find_all(class_='stuff left'):#     price = item.find_next(class_="stuff-price__digits").text#     name = item.find_next('div', class_='stuff-desc').find('a', class_='to_product').text#     article = get_article_from_title(name)#     print(price, name, article)