from Classes.store import BaseStore, Soupfrom utillities import get_article_from_title, clean_priceclass KtcStore(BaseStore):    def __init__(self):        super().__init__(shop_url='https://ktc.ua/search/brand-wacom/graphic_tablets/?q=wacom&sort-search-desc')        self.soup = Soup(KtcStore.                         get(self,                             shop_url='https://ktc.ua/search/brand-wacom/graphic_tablets/?q=wacom&sort-search-desc'))        self.all_items = (self.soup.find_element(class_='catalog__goods').                          find(class_='js-looplist looplist looplist-4 clearfix'))    def generate_info(self):        for item in self.all_items.find_all('div', class_='loop'):            price_element = item.find_next(class_='loop__buy loop__buy-loop')            name = item.find(class_='loop__title').text            article = get_article_from_title(name)            status = item.find_next(class_='loop__pb').text            price = None            if price_element is not None:                price = price_element['data-price'].strip().replace('.00', '')            if 'Немає в наявності' not in status:                card_item = {                    'name': name,                    'price': clean_price(price),                    'article': article                }                self.item_list.append(card_item)        return self.item_list