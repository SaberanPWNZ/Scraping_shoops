from Scraping_shoops.Classes.store import BaseStore, Soupfrom utillities import get_article_from_titleclass KtcStore(BaseStore):    def __init__(self):        super().__init__(shop_url='https://ktc.ua/search/brand-wacom/graphic_tablets/?q=wacom&sort-search-desc')        self.soup = Soup(KtcStore.                get(self, shop_url='htps://ktc.ua/search/brand-wacom/graphic_tablets/?q=wacom&sort-search-desc'))        self.all_items = (self.soup.find_elements(class_='catalog__goods').                          find(class_='js-looplist looplist looplist-4 clearfix'))    def generate_info(self):            for item in self.all_items.find_all('div', class_='loop'):                price = item.find_next('div', class_="card-price")            #     name = item.find_next(class_='card__title')            #            #     if price is not None:            #         price = price.text.strip().replace(" ", "").replace("â‚´", "")            #            #     if name is not None:            #         name = name.get('title')            #            #     card_item = {            #         'name': name,            #         'price': price,            #         'article': get_article_from_title(name)            #     }            #     self.item_list.append(card_item)            #            return self.item_listktc = KtcStore()items = ktc.generate_info()