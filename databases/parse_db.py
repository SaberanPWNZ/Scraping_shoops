import _sqlite3import osfrom datetime import datetimeimport datetimefrom gspread import api_keyimport gspreadfrom dotenv import load_dotenvfrom Classes.item import Itemload_dotenv()google_token = os.getenv(key="GOOGLE_TOKEN")path_to_keys = gspread.api_key(token=google_token)test_sheet = path_to_keys.open_by_url(    "https://docs.google.com/spreadsheets/d/1v3LhZ__mm9G2F0nEdLlQzQ-YcqWYvXGpI9f6ijeC9jY/edit#gid=0")#formatted_datetime = datetime.now().strftime("%d_%m_%Y_%H_%M")data = []ranges_rows_code = ['A3:A10', 'A12:A14', 'A17:A27', 'A30:A32', 'A34:A44', 'A47:A60', 'A62:A64', 'A66:A67']ranges_rows_title = ['b3:b10', 'b12:b14', 'b17:b27', 'b30:b32', 'b34:b44', 'b47:b60', 'b62:b64', 'b66:b67']ranges_rows_price = ['E3:E10', 'E12:E14', 'E17:E27', 'E30:E32', 'E34:E44', 'E47:E60', 'E62:e64', 'e66:e67']row_data_article = test_sheet.sheet1.batch_get(ranges_rows_code)row_data_price = test_sheet.sheet1.batch_get(ranges_rows_price)row_data_title = test_sheet.sheet1.batch_get(ranges_rows_title)conn = _sqlite3.connect('/Foxtrot/Wacom_price.db') #need to checkcursor = conn.cursor()# print(row_data_article, row_data_price, row_data_title)def clear_data(items_list):    cleaned_data = []    for item in items_list:        if isinstance(item, list):            for i in item:                cleaned_data.append(i)        else:            cleaned_data.append(i)    return cleaned_dataclean_title = [item for sublist in clear_data(row_data_title) for item in sublist]clean_article = [item for sublist in clear_data(row_data_article) for item in sublist]clean_price = [item for sublist in clear_data(row_data_price) for item in sublist]final_data = list(zip(clean_title, clean_price, clean_article))def insert_new_info(items_list):    cursor.execute('''CREATE TABLE IF NOT EXISTS WACOM (                        id INTEGER PRIMARY KEY,                        article TEXT NOT NULL,                        title TEXT NOT NULL,                        price INTEGER NOT NULL                    )''')    for item in items_list:        article = item[2].strip()        title = item[0].strip()        price = item[1].strip().replace(' ', "").replace(',00', '').replace(',', "")        cursor.execute('''INSERT INTO WACOM(article, title, price)        VALUES (?, ?, ?)''', (article, title, price.encode()))def get_info_from_db():    items_from_db = []    cursor.execute('''SELECT * FROM WACOM''')    all_from_table = cursor.fetchall()    for elem in all_from_table:        item = Item.from_tuple(elem)        items_from_db.append(item)        yield item    return items_from_db