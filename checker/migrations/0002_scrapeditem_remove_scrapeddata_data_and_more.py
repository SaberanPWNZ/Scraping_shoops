# Generated by Django 5.1.3 on 2024-11-26 13:10

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('checker', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ScrapedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('article', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Товар партнера',
                'verbose_name_plural': 'Товари партнера',
            },
        ),
        migrations.RemoveField(
            model_name='scrapeddata',
            name='data',
        ),
        migrations.RemoveField(
            model_name='scrapeddata',
            name='partner_name',
        ),
        migrations.AddField(
            model_name='scrapeddata',
            name='partner',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='scraped_data', to='checker.partner'),
        ),
        migrations.AlterField(
            model_name='partner',
            name='logo',
            field=models.ImageField(blank=True, null=True, upload_to='partner_logos/'),
        ),
        migrations.AlterField(
            model_name='partner',
            name='web_site',
            field=models.URLField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='scrapeddata',
            name='last_update',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='scrapeddata',
            name='items',
            field=models.ManyToManyField(related_name='scraped_data', to='checker.scrapeditem'),
        ),
    ]
